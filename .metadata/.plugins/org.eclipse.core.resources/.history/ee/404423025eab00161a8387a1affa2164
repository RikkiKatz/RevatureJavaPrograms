package com.rikki.oop;

public class Polymorphism {

	public static void makeFood(Creature toProcess){
		
	}
	
	public static void main(String[] args) {
		Creature one = new Pig();	//object can be referenced as parent type
		System.out.println(one);
		Creature two = new Cow();	//IS-A check
		
		Creature[] farm= {one,two};
		
		// virtual method invocation
		farm[0].Sound();		//virtually calls pig.sound even though it was referenced as a reature
		farm[1].Sound();
		makeFood(one);
	}
	
}

class Creature{
	public void Sound(){
		System.out.println("Roar");
	}
}

class Pig extends Creature{
	public void Sound() {		//exact same signature as method as parent class method
		System.out.println("Oink");
	}
	
	//Overloading
	//same name as method in same class but dif params
	public void sound(String soundToMake){
		
	}
}

class Cow extends Creature{
	@Override
	public void Sound() {
		System.out.println("Moo");
	}
}
